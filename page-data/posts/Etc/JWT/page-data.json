{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/Etc/JWT","webpackCompilationHash":"d13be220416c7a3ded43","result":{"data":{"markdownRemark":{"id":"5e3e379f-a385-5a0d-b127-43aadb05c38e","html":"<span class=\"notice\">\n  <em>TIL 이므로 잘못된 내용은 댓글 부탁드립니다</em>\n</span>\n<p>로그인을 구현하기 앞서 JWT에 대해서 알아보자</p>\n<p>백엔드에서는 클라이언트가 보낸 데이터를 원본 그대로라고 절대 믿어서는 안된다. 이유는 바로 클라이언트에서 보내는 데이터는 위/변조가 가능하기때문이다. 그러면 클라이언트가 보내는 데이터가 안전하다라는 것을 어떻게 신뢰할 수 있을까?</p>\n<p>바로 데이터의 기밀성과, 무결성을 보장해주면 된다.</p>\n<blockquote>\n<p><strong>기밀성</strong><br>\n데이터 자체를 노출시키지 않는 것(=암호화)<br>\n<strong>무결성</strong><br>\n데이터가 원본 그대로 전달되는 것</p>\n</blockquote>\n<h2 id=\"jwt\"><a href=\"#jwt\" aria-label=\"jwt permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JWT</h2>\n<h3 id=\"jwt-란\"><a href=\"#jwt-%EB%9E%80\" aria-label=\"jwt 란 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JWT 란?</h3>\n<p>Json Web Token은 JSON 객체를 사용하여 정보를 안전하게 전송하기 위한 자체적인 방법을 정의하는 표준(RFC 7519)이다.</p>\n<p>JWT는 필요한 모든 정보를 자체적으로 지니고 있고, JWT 시스템에서 발급된 토큰은, 토큰에 대한 기본정보, 전달할 정보 그리고 토큰이 검증됐다는 것을 증명해주는 암호화된 키(signature)를 포함하고 있다.</p>\n<p>그러면 JWT는 어느 상황에 쓰일까?</p>\n<ul>\n<li><strong>허가</strong><br>\nJWT를 사용하기 위한 가장 일반적인 시나이오이다. 사용자가 로그인한 후 각 후속 요청에는 JWT가 포함되어 사용자는 이 토큰으로 허용되는 경로, 서비스 및 리소스를 액세스 할 수 있다. 즉, 서버가 클라이언트에게서 요청을 받을때 마다, 해당 토큰이 유효한지 인증됐는지를 검증하고, 유저가 요청한 작업에 권한이 있는지 확인하여 작업을 처리한다.</li>\n<li><strong>정보 교환</strong><br>\nJWT는 당사자 간에 안전하게 정보를 전송하는 좋은 방법이다. 공용/개인 키 쌍을 사용하여 JWT에 서명할 수 있기 때문에 정보를 보낸이가 바뀌지 않았는지, 정보가 도중에 조작되지 않았는지 검증할 수 있다. 왜냐하면 서명은 header와 payload로 계산되기 때문이다.</li>\n</ul>\n<p><strong>하지만 JWT는 암호화(기밀성)가 목적이 아닌 데이터의 위/변조 여부(무결성)를 보장하는 목적이라는 것을 명심하자.</strong> 이유는 토큰을 가지고 <a href=\"https://jwt.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">JWT.io</a>로 이동하여 Debugger의 Encoded 인풋에 토큰을 입력해보자 그러면 세부내용을 확인할 수 있다. 이처럼 토큰만 탈취할 수 있다면 손쉽게 세부내용을 확인할 수 있다.</p>\n<hr class=\"sub\" />\n<h3 id=\"jwt-사용법\"><a href=\"#jwt-%EC%82%AC%EC%9A%A9%EB%B2%95\" aria-label=\"jwt 사용법 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JWT 사용법</h3>\n<h4 id=\"설치\"><a href=\"#%EC%84%A4%EC%B9%98\" aria-label=\"설치 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설치</h4>\n<p>우선 패키지매니저를 이용하여 JWT를 설치해보자</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i jsonwebtoken</code></pre></div>\n<hr />\n<h4 id=\"토큰-생성\"><a href=\"#%ED%86%A0%ED%81%B0-%EC%83%9D%EC%84%B1\" aria-label=\"토큰 생성 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>토큰 생성</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// import jwt from 'jsonwebtoken';</span>\n<span class=\"token keyword\">const</span> jwt <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'jsonwebtoken'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> token <span class=\"token operator\">=</span> jwt<span class=\"token punctuation\">.</span><span class=\"token function\">sign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'publee'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'SECRET_KEY'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 토큰을 만든다.</span>\n<span class=\"token keyword\">const</span> token <span class=\"token operator\">=</span> jwt<span class=\"token punctuation\">.</span><span class=\"token function\">sign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'publee'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'SECRET_KEY'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> expiresIn<span class=\"token punctuation\">:</span> <span class=\"token number\">604800</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// expiresIn: 604800 = 1 week</span></code></pre></div>\n<p>sign 메소드를 사용하여 데이터에 대해 서명을 해준다(토큰을 생성해준다)</p>\n<ul>\n<li>첫번째 파라미터 : 위/변조를 방지하고 싶은 데이터를 정의</li>\n<li>두번째 파라미터 : KEY 값, 백엔드 개발자와 협의하여 만든다. 이유는 클라이언트에서 검증(verify)를 하기 위해서는 키 값이 필요하기 때문이다.(노출되어 있으면 안되므로 주로 .env파일에 저장하여 사용)</li>\n<li>세번째 파라미터[ 옵션 ] : 토큰이 존재할 수 있는 만료기한을 지정한다. 단위는 1초 단위이다.</li>\n</ul>\n<hr />\n<h4 id=\"검증\"><a href=\"#%EA%B2%80%EC%A6%9D\" aria-label=\"검증 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>검증</h4>\n<p>권한을 확인하는 메소드이다. 이때 생성했을때와 키값과 일치해야한다. 프론트엔드 개발자가 주로 사용하는 메소드이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> decoded <span class=\"token operator\">=</span> jwt<span class=\"token punctuation\">.</span><span class=\"token function\">verify</span><span class=\"token punctuation\">(</span><span class=\"token string\">'token'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'SECRET_KEY'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>verify 메소드를 사용하여 권한을 확인할 수 있다.</p>\n<ul>\n<li>첫번째 파라미터 : token 값을 전달한다.(토큰은 주로 쿠키에 저장되어 있으므로 cookies의 속성을 참조하면 된다.)</li>\n<li>두번째 파라미터 : secret key값을 작성한다.</li>\n</ul>\n<p>이렇게 호출하면 토큰에 해당하는 데이터가 decode되어 return 됩니다.</p>\n<hr />\n<h4 id=\"디코드\"><a href=\"#%EB%94%94%EC%BD%94%EB%93%9C\" aria-label=\"디코드 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>디코드</h4>\n<p>토큰에 담겨져 있는 데이터의 원본을 decode 할 수 있는 메소드이다. verify와 같지 않나? 라고 생각하겠지만 verify와 같이 데이터 원본을 확인할 수 있는 것은 동일하고, 데이터의 무결성(위/변조 방지)를 보장할 수 없다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> decoded <span class=\"token operator\">=</span> jwt<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span><span class=\"token string\">'token'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>파라미터는 토큰만 필요하다.</li>\n</ul>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<div class=\"reference-site\">\n<p>  <strong>Reference</strong><br></p>\n</div>","fields":{"slug":"/posts/Etc/JWT","tagSlugs":["/tag/jwt-json-web-token/"]},"frontmatter":{"date":"2020-01-09","description":"JWT(Json Web Token)에 대해 알아보자","tags":["JWT(Json Web Token)"],"title":"JWT(Json Web Token)에 대해 알아보자","socialImage":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/Etc/JWT"}}}