{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/Etc/Keyword","webpackCompilationHash":"2db6a5833f4206215bbd","result":{"data":{"markdownRemark":{"id":"65bb92c4-fa20-592c-9597-18f6c4248d5a","html":"<span class=\"notice\">\n  <em>TIL 이므로 잘못된 내용은 댓글 부탁드립니다</em>\n</span>\n<div id=\"toc\">\n<p><strong><img class=\"emoji-icon\" alt=\"emoji-link\" data-icon=\"emoji-link\" style=\"display: inline; margin: 0; margin-top: 1px; position: relative; top: 5px; width: 25px\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAQAAABKfvVzAAAABGdBTUEAAYagMeiWXwAAAAJiS0dEAP+Hj8y/AAAAB3RJTUUH4QsFFwYZepoZFwAAA21JREFUOMt1lFtsFHUUxr//zHYue213obFbamutloDaxSigISQYkFrjNSSI9EJ9IWqjkZhoUkVJGhdZO5pGm9IK4QHhQTRIFXwgxqSaWLykamAV02btZaft7navc9vZmb8PKFa6nofz9Ptycr5zIfif+BMcE23Q79SrkSK/uqYqrG0AAFIePw3ep+zXus0Ghrd1Msmfcn5oJ/YCYMvhI6D+uJQ84PCsvhwcZ5Xc2uSDmbqFse1qrJxgGLxflvL7hDn60uLBn04rn9hXrZbMFi0T/uaJlYIhiP64pHSJ00s9b34saietonbil8Y0adNr15+z8+yNOOeXJbVLiC319H++EV8DmEEb0jK3E7ep5+1px3L8AH5zed+2O2HGT23+jpJJ2gQAsJDPBVI8V3QRMP/i3VA8xsu5do1ccTDPpT478cyE5yQAIIjbA0ItDGNJw/UKR+D2/xgpdhB2Pto40xxU75ltYdaZhw7leDxJhnYb67TvlamKf5o+Cr9/VprdR1l7IbnbN2B9as1bGzP3a7Gqic3kq6eNPoFR+x79NnpNMASnPy7lOpUMZUjeGMwlErlL46JFHtIC8qj+eP490YfIlUG5dBYscBS8X5aULn460cs2CHXiRdekAxzNyuzDtH5BIK9UViISC9foxwGwryLjVvr1bnEm2zNyJtTs2Sr4GsYc+QJMq+Ixuja2Kci7I1fDbm0QAMDuRK7D6OXns89Lox3UlKu3iluE9bcWmpj4XfxeszJZcr9DDkMb/tsc0u7lzwrb1BePD2yCFxfJC631b7EtRWM6nRQCVXJ+or82UlTHr5vv0OuZptKc/EUbLgF4hA58+Vqsrt16AKEaQVAWe6eGsmZq2XAZw22LlsKo1/wdBSiNzh0sfOS1q4pEmh/e9R8cYEqLWOIDN928Cs8CAD7ABsb7lPm64LAik4ebjTM3LCdbqa4Oee4TmTvGbP0cNuBu5uc96Xd5H41MhH3qsRXLz263SvlAq/NeUt+YShDhluj+xBucl0b+CAfUkTLHRXYhyu7oXNPH1tAskyJeexVbUPp/P+LW3i97vAQcOMHduiO0Z03I6TFNOf7DhfMXVB0ENiyYMKBDhYYiTNiwCTg44YLI+5qrg540vawUTDAgoLBRQhE6VChQoMGEBZss+x0UAFnxR+iyDOAv/Ud+TW3GONMAAAAldEVYdGRhdGU6Y3JlYXRlADIwMTctMTEtMDVUMTg6NDk6NTArMDA6MDAUXGOwAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDE3LTExLTA1VDEzOjUzOjQ4KzAwOjAwqyFlXwAAAABJRU5ErkJggg==\" title=\"emoji-link\">  Table Of Contents</strong></p>\n<ul>\n<li><a href=\"#%EB%B6%80%ED%98%B8%EC%B2%B4%EA%B3%84\">부호체계</a></li>\n<li><a href=\"#%EC%BB%B4%ED%8C%8C%EC%9D%BC%EB%9F%AC%EC%99%80-%EC%9D%B8%ED%84%B0%ED%94%84%EB%A6%AC%ED%84%B0\">컴파일러와 인터프리터</a></li>\n<li><a href=\"#javascirpt%EC%99%80-ecmascript\">Javascirpt와 ECMAScript</a></li>\n<li>\n<p><a href=\"#%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8%EC%99%80-%EC%84%9C%EB%B2%84\">클라이언트와 서버</a></p>\n<ul>\n<li><a href=\"#%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8\">클라이언트</a></li>\n<li><a href=\"#%EC%84%9C%EB%B2%84\">서버</a></li>\n<li><a href=\"#%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C\">프로토콜</a></li>\n</ul>\n</li>\n<li><a href=\"#%EC%9D%BC%EA%B8%89-%EA%B0%9D%EC%B2%B4\">일급객체</a></li>\n</ul>\n</div>\n<h2 id=\"부호체계\"><a href=\"#%EB%B6%80%ED%98%B8%EC%B2%B4%EA%B3%84\" aria-label=\"부호체계 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>부호체계</h2>\n<blockquote>\n<p>컴퓨터의 기본 저장 단위는 바이트(byte)이다.</p>\n</blockquote>\n<p>문자나 기호의 집합을 컴퓨터에서 저장하거나 통신 목적으로 사용할 경우에는 컴퓨터가 인식할 수 없는 문자나 기호를 부호로 바꾸어야한다.\n그리하여 아스키코드와 ANSI코드 유니코드가 탄생하였다.</p>\n<ul>\n<li><strong>아스키코드</strong><br>\n1960년대 미국에서 정의한 표준화한 7bit 부호체계이다.\n컴퓨터의 기본 저장 단위는 1byte(8bit)라 하였는데\n7bit를 사용하는 이유는 나머지 1bit는 통신에러 검출(Parity Bit)를 위해 사용하기 때문이다.\n7bit를 사용하기 때문에 2<sup>7</sup> 즉, 128개의 고유한 값만 사용한다.\nhttp는 아스키코드로 만들어져있다.</li>\n<li><strong>ANSI 코드</strong><br>\n7bit를 사용하는 아스키코드에 다른 언어를 표현하기에는 부족함을 느껴 1bit를 추가한 8bit의 아스키코드가 나왔다.\n2<sup>8</sup> = 256개의 문자를 쓸 수 있게 되었다.\n이를 ANSI코드라 불렀다.</li>\n<li><strong>유니코드</strong><br>\nANSI코드를 사용하는데 있어 비유럽 국가 특히 한국,중국, 일본과 같은 문자가 많은 국가에서는 1byte(8bit)로는 부족함을 느껴 만들어진 코드이다.</li>\n</ul>\n<p>최초에는 2byte로 정의하여 65536개의 문자를 담을 수 있었지만, 쓰지 않는 고어, 아프리카 토속어 등등 모든 문자를 담기에는 부족하여\n유니코드 3.0부터 보충언어판을 정의하여 상위대행과 하위해행을 할당한 뒤 이 둘의 조합으로 1024x1024 = 1,048,576 약 백만자가 넘는 문자를 추가로 정의했다.</p>\n<p>인코딩 방식으로는 UTF-7, UTF-8, UTF-16, UTF-32 인코딩 등이 있다.</p>\n<br>\n<br>\n<h2 id=\"컴파일러와-인터프리터\"><a href=\"#%EC%BB%B4%ED%8C%8C%EC%9D%BC%EB%9F%AC%EC%99%80-%EC%9D%B8%ED%84%B0%ED%94%84%EB%A6%AC%ED%84%B0\" aria-label=\"컴파일러와 인터프리터 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컴파일러와 인터프리터</h2>\n<p>인간이 이해할 수 있는 약속된 구문으로 구성된 프로그래밍 언어를 사용하여 프로그램을 작성한 것을 컴퓨터가 이해할 수 있는 기계어로 변환하여 주는 일종의 번역기</p>\n<article class=\"board-tbl\">\n<table>\n<thead>\n<tr>\n<th align=\"left\">컴파일러(번역가)</th>\n<th align=\"left\">인터프리터(동시 통역가)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">소스 코드 전체를 한번에 머신코드(CPU가 바로 실행할 수 있는 기계어)로 변환 후 실행한다</td>\n<td align=\"left\">한 줄씩 중간 코드인 바이트 코드(특정한 하드웨어가 아니라 가상 머신에서 실행하도록 만든 바이너리 코드)로 변환한 후 실행한다.</td>\n</tr>\n<tr>\n<td align=\"left\">실행 파일을 생성한다</td>\n<td align=\"left\">실행 파일을 생성하지 않는다</td>\n</tr>\n<tr>\n<td align=\"left\">컴파일 단계와 실행 단계가 분리되어 있다. 명시적인 컴파일 단계를 거쳐 명시적으로 실행파일을 실행한다</td>\n<td align=\"left\">인터프리트 단계와 실행 단계가 분리되어 있지 않고, 한줄씩 바이트 코드로 변환하고 즉시 실행한다</td>\n</tr>\n<tr>\n<td align=\"left\">실행에 앞서 컴파일은 단 한번 수행된다</td>\n<td align=\"left\">코드가 실행될 때마다 인터프리트 과정이 반복 수행된다</td>\n</tr>\n<tr>\n<td align=\"left\">컴파일과 실행 단계가 분리되어 있으므로 코드 실행 속도가 빠르다</td>\n<td align=\"left\">인터프리트 단계와 실행 단계가 분리되어 있지 않고 반복 수행되므로 코드 실행 속도가 비교적 느리다</td>\n</tr>\n<tr>\n<td align=\"left\">대표언어: C, C++</td>\n<td align=\"left\">대표언어: 자바스크립트</td>\n</tr>\n</tbody>\n</table>\n</article>\n<br>\n<br>\n<h2 id=\"javascirpt와-ecmascript\"><a href=\"#javascirpt%EC%99%80-ecmascript\" aria-label=\"javascirpt와 ecmascript permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Javascirpt와 ECMAScript</h2>\n<ul>\n<li><strong>Javascript</strong><br>\nClient-side Web APIs(DOM, BOM, SVG, Web Storage)와 ECMAScript에서 정한 표준 사양을 포함하고 지원하는 프로그래밍 언어를 의미한다.</li>\n<li><strong>ECMAScript</strong><br>\nECMA 인터내셔널의 ECMA-262 기술 규격에 정의된 표준화된 스크립트 프로그래밍 언어이다.</li>\n</ul>\n<br>\n<br>\n<h2 id=\"클라이언트와-서버\"><a href=\"#%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8%EC%99%80-%EC%84%9C%EB%B2%84\" aria-label=\"클라이언트와 서버 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클라이언트와 서버</h2>\n<h3 id=\"클라이언트\"><a href=\"#%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8\" aria-label=\"클라이언트 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클라이언트</h3>\n<p>서비스를 받는 입장 서버에 데이터를 인터넷을 통해 요청(request)하는 입장<br>\n데이터를 받아 파싱을 통해 트리를 구조하고 이를 화면에 그린다.</p>\n<hr class=\"sub\" />\n<h3 id=\"서버\"><a href=\"#%EC%84%9C%EB%B2%84\" aria-label=\"서버 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서버</h3>\n<p>클라이언트가 요청한 패킷(데이터를 일정 크기로 자른 것)을 인터넷을 통해 주는(response) 입장</p>\n<blockquote>\n<p>웹서버는 클라이언트에서 root로 요청이 오면 index.html을 주도록 암묵적으로 설계되어있다. 그래서 우리가 흔히 쓰는 메인페이지 html 이름을 index.html로 지정하는 것이다.</p>\n</blockquote>\n<hr class=\"sub\" />\n<h3 id=\"프로토콜\"><a href=\"#%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C\" aria-label=\"프로토콜 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로토콜</h3>\n<p>데이터를 어떻게 전달해줄지 정하는 통신 규약<br>\n<a href=\"/posts/Etc/Protocol\">여기서</a> 확인해보자.</p>\n<br>\n<br>\n<h2 id=\"일급-객체\"><a href=\"#%EC%9D%BC%EA%B8%89-%EA%B0%9D%EC%B2%B4\" aria-label=\"일급 객체 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>일급 객체</h2>\n<p>일급 객체는 다음과 같은 조건을 만족해야한다.</p>\n<ol>\n<li>무명의 리터럴로 생성할 수 있다. 즉, 런타임에 생성이 가능하다.</li>\n<li>변수나 자료구조(객체,배열 등)에 저장할 수 있다</li>\n<li>함수의 매개 변수에 전달할 수 있다.</li>\n<li>함수의 결과값으로 반환할 수 있다.</li>\n</ol>\n<p>자바스크립트의 함수는 위와 같은 조건을 모두 만족하므로 일급 객체이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 1. 함수는 무명의 리터럴로 생성할 수 있다.</span>\n<span class=\"token comment\">// 2. 함수는 변수에 저장할 수 있다.</span>\n<span class=\"token comment\">// 런타임(할당 단계)에 함수 리터럴이 평가되어 함수 객체가 생성되고 변수에 할당된다.</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">increase</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">num</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">++</span>num<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">decrease</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">num</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">--</span>num<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 2. 함수는 객체에 저장할 수 있다.</span>\n<span class=\"token keyword\">const</span> predicates <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> increase<span class=\"token punctuation\">,</span> decrease <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 3. 함수의 매개 변수에게 전달할 수 있다.</span>\n<span class=\"token comment\">// 4. 함수의 반환값으로 사용할 수 있다.</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">makeCounter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">predicate</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> num <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    num <span class=\"token operator\">=</span> <span class=\"token function\">predicate</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> num<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 3. 함수는 매개 변수에게 함수를 전달할 수 있다.</span>\n<span class=\"token keyword\">const</span> increaser <span class=\"token operator\">=</span> <span class=\"token function\">makeCounter</span><span class=\"token punctuation\">(</span>predicates<span class=\"token punctuation\">.</span>increase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">increaser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">increaser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2</span>\n\n<span class=\"token comment\">// 3. 함수는 매개 변수에게 함수를 전달할 수 있다.</span>\n<span class=\"token keyword\">const</span> decreaser <span class=\"token operator\">=</span> <span class=\"token function\">makeCounter</span><span class=\"token punctuation\">(</span>predicates<span class=\"token punctuation\">.</span>decrease<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">decreaser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// -1</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">decreaser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// -2</span></code></pre></div>\n<br>\n<br>\n<br>\n<br>\n<br>","fields":{"slug":"/posts/Etc/Keyword","tagSlugs":["/tag/keyword/"]},"frontmatter":{"date":"2019-10-04","description":"Keyword 정리","tags":["Keyword"],"title":"Keyword 정리","socialImage":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/Etc/Keyword"}}}