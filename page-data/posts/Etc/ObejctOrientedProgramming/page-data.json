{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/Etc/ObejctOrientedProgramming","webpackCompilationHash":"f69cd6245491ca774d5e","result":{"data":{"markdownRemark":{"id":"c8be2cff-c5c1-53cf-94a5-653d2d4a5f21","html":"<span class=\"notice\">\n  <em>TIL 이므로 잘못된 내용은 댓글 부탁드립니다</em>\n</span>\n<div id=\"toc\">\n<p><strong><img class=\"emoji-icon\" alt=\"emoji-link\" data-icon=\"emoji-link\" style=\"display: inline; margin: 0; margin-top: 1px; position: relative; top: 5px; width: 25px\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAQAAABKfvVzAAAABGdBTUEAAYagMeiWXwAAAAJiS0dEAP+Hj8y/AAAAB3RJTUUH4QsFFwYZepoZFwAAA21JREFUOMt1lFtsFHUUxr//zHYue213obFbamutloDaxSigISQYkFrjNSSI9EJ9IWqjkZhoUkVJGhdZO5pGm9IK4QHhQTRIFXwgxqSaWLykamAV02btZaft7navc9vZmb8PKFa6nofz9Ptycr5zIfif+BMcE23Q79SrkSK/uqYqrG0AAFIePw3ep+zXus0Ghrd1Msmfcn5oJ/YCYMvhI6D+uJQ84PCsvhwcZ5Xc2uSDmbqFse1qrJxgGLxflvL7hDn60uLBn04rn9hXrZbMFi0T/uaJlYIhiP64pHSJ00s9b34saietonbil8Y0adNr15+z8+yNOOeXJbVLiC319H++EV8DmEEb0jK3E7ep5+1px3L8AH5zed+2O2HGT23+jpJJ2gQAsJDPBVI8V3QRMP/i3VA8xsu5do1ccTDPpT478cyE5yQAIIjbA0ItDGNJw/UKR+D2/xgpdhB2Pto40xxU75ltYdaZhw7leDxJhnYb67TvlamKf5o+Cr9/VprdR1l7IbnbN2B9as1bGzP3a7Gqic3kq6eNPoFR+x79NnpNMASnPy7lOpUMZUjeGMwlErlL46JFHtIC8qj+eP490YfIlUG5dBYscBS8X5aULn460cs2CHXiRdekAxzNyuzDtH5BIK9UViISC9foxwGwryLjVvr1bnEm2zNyJtTs2Sr4GsYc+QJMq+Ixuja2Kci7I1fDbm0QAMDuRK7D6OXns89Lox3UlKu3iluE9bcWmpj4XfxeszJZcr9DDkMb/tsc0u7lzwrb1BePD2yCFxfJC631b7EtRWM6nRQCVXJ+or82UlTHr5vv0OuZptKc/EUbLgF4hA58+Vqsrt16AKEaQVAWe6eGsmZq2XAZw22LlsKo1/wdBSiNzh0sfOS1q4pEmh/e9R8cYEqLWOIDN928Cs8CAD7ABsb7lPm64LAik4ebjTM3LCdbqa4Oee4TmTvGbP0cNuBu5uc96Xd5H41MhH3qsRXLz263SvlAq/NeUt+YShDhluj+xBucl0b+CAfUkTLHRXYhyu7oXNPH1tAskyJeexVbUPp/P+LW3i97vAQcOMHduiO0Z03I6TFNOf7DhfMXVB0ENiyYMKBDhYYiTNiwCTg44YLI+5qrg540vawUTDAgoLBRQhE6VChQoMGEBZss+x0UAFnxR+iyDOAv/Ud+TW3GONMAAAAldEVYdGRhdGU6Y3JlYXRlADIwMTctMTEtMDVUMTg6NDk6NTArMDA6MDAUXGOwAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDE3LTExLTA1VDEzOjUzOjQ4KzAwOjAwqyFlXwAAAABJRU5ErkJggg==\" title=\"emoji-link\">  Table Of Contents</strong></p>\n<ul>\n<li><a href=\"#%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%ED%8C%A8%EB%9F%AC%EB%8B%A4%EC%9E%84\">프로그래밍 패러다임</a></li>\n<li>\n<p><a href=\"#%EA%B0%9D%EC%B2%B4-%EC%A7%80%ED%96%A5-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8Doop%EB%9E%80\">객체 지향 프로그래밍(OOP)란?</a></p>\n<ul>\n<li><a href=\"#%EA%B0%9D%EC%B2%B4-%EC%A7%80%ED%96%A5-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%9D%98-%EC%9E%A5%EC%A0%90\">객체 지향 프로그래밍의 장점</a></li>\n<li><a href=\"#%EA%B0%9D%EC%B2%B4-%EC%A7%80%ED%96%A5-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%9D%98-%EB%8B%A8%EC%A0%90\">객체 지향 프로그래밍의 단점</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EA%B0%9D%EC%B2%B4-%EC%A7%80%ED%96%A5-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%9D%98-%ED%82%A4%EC%9B%8C%EB%93%9C-5%EA%B0%80%EC%A7%80\">객체 지향 프로그래밍의 키워드 5가지</a></p>\n<ul>\n<li><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4%EC%99%80-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4\">클래스와 인스턴스</a></li>\n<li><a href=\"#%EC%B6%94%EC%83%81%ED%99%94\">추상화</a></li>\n<li><a href=\"#%EC%BA%A1%EC%8A%90%ED%99%94\">캡슐화</a></li>\n<li><a href=\"#%EC%83%81%EC%86%8D%EC%9E%AC%EC%82%AC%EC%9A%A9\">상속(재사용)</a></li>\n<li><a href=\"#%EB%8B%A4%ED%98%95%EC%84%B1\">다형성</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<h2 id=\"프로그래밍-패러다임\"><a href=\"#%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%ED%8C%A8%EB%9F%AC%EB%8B%A4%EC%9E%84\" aria-label=\"프로그래밍 패러다임 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로그래밍 패러다임</h2>\n<p>프로그래밍 패러다임은 프로그래머에게 프로그래밍의 관점을 갖게하고 결정하는 역할을 한다.</p>\n<ul>\n<li>\n<p><b>명령형 프로그래밍</b><br>\n프로그래밍의 상태와 상태를 변경시키는 구문의 관점에서 연산을 설명하는 방식, 알고리즘을 명시하고 목표는 명시 하지 않는다.</p>\n<ul>\n<li>절차지향 프로그래밍<br>\n수행되어야 할 연속적인 계산 과정을 포함하는 방식(C, C++)</li>\n<li><b>객체지향 프로그래밍</b><br>\n객체들의 집합으로 프로그램의 상호작용을 표현(C++, Java, C#)</li>\n</ul>\n</li>\n<li>\n<p>선언형 프로그래밍<br>\n어떤 방법으로 해야 하는지(How)를 나타내기보다 무엇(Way)과 같은지를 설명하는 방식, 알고리즘을 명시하지 않고 목표만 명시한다.</p>\n<ul>\n<li>함수형 프로그래밍<br>\n순수 함수를 조합하고 소프트웨어를 만드는 방식(클로저, 하스켈, 리스프)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"객체-지향-프로그래밍oop란\"><a href=\"#%EA%B0%9D%EC%B2%B4-%EC%A7%80%ED%96%A5-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8Doop%EB%9E%80\" aria-label=\"객체 지향 프로그래밍oop란 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체 지향 프로그래밍(OOP)란?</h2>\n<p>프로그래밍에서 필요한 데이터를 추상화시켜 상태와 행위를 가진 객체를 만들고 그 객체들 간의 유기적인 상호작용을 통해 로직을 구성하는 프로그래밍 패러다임이다.</p>\n<h3 id=\"객체-지향-프로그래밍의-장점\"><a href=\"#%EA%B0%9D%EC%B2%B4-%EC%A7%80%ED%96%A5-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%9D%98-%EC%9E%A5%EC%A0%90\" aria-label=\"객체 지향 프로그래밍의 장점 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체 지향 프로그래밍의 장점</h3>\n<ul>\n<li>코드 재사용성<br>\n*상속을 통해 확장해서 사용할 수 있다.</li>\n<li>유지보수의 용이성<br>\n수정이 필요한 부분이 클래스 내부에 변수 혹은 메소드로 있기 때문에 해당 부분만 수정하면 되어 용이하다.</li>\n<li>대형 프로젝트에 적합성<br>\n클래스 단위로 모듈화시켜서 개발할 수 있어, 여러명 혹은 여러회사에서 개발이 필요한 대형 프로젝트의 경우 업무 분담이 쉽다.</li>\n</ul>\n<blockquote>\n<p>상속(inheritance)이란<br>\n기존의 클래스에 기능을 추가하거나 재정의하여 새로운 클래스를 정의하는 것을 의미합니다.\n이러한 상속은 캡슐화, 추상화와 더불어 객체 지향 프로그래밍을 구성하는 중요한 특징 중 하나입니다.</p>\n</blockquote>\n<br>\n<h3 id=\"객체-지향-프로그래밍의-단점\"><a href=\"#%EA%B0%9D%EC%B2%B4-%EC%A7%80%ED%96%A5-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%9D%98-%EB%8B%A8%EC%A0%90\" aria-label=\"객체 지향 프로그래밍의 단점 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체 지향 프로그래밍의 단점</h3>\n<ul>\n<li>처리속도가 느리다.</li>\n<li>객체가 많으면 많을수록 용량이 커질 수 있다.</li>\n<li>설계시 많은 시간과 노력을 들여야한다.</li>\n</ul>\n<br>\n<h2 id=\"객체-지향-프로그래밍의-키워드-5가지\"><a href=\"#%EA%B0%9D%EC%B2%B4-%EC%A7%80%ED%96%A5-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%9D%98-%ED%82%A4%EC%9B%8C%EB%93%9C-5%EA%B0%80%EC%A7%80\" aria-label=\"객체 지향 프로그래밍의 키워드 5가지 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체 지향 프로그래밍의 키워드 5가지</h2>\n<ol>\n<li>클래스와 인스턴스<br></li>\n<li>추상화<br></li>\n<li>캡슐화<br></li>\n<li>상속<br></li>\n<li>다형성</li>\n</ol>\n<br>\n<h3 id=\"클래스와-인스턴스\"><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4%EC%99%80-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4\" aria-label=\"클래스와 인스턴스 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클래스와 인스턴스</h3>\n<ul>\n<li>클래스<br>\n어떤 문제를 해결하기 위한 데이터를 만들기위해 추상화를 거쳐 집단에 상태와 행위를 변수와 메소드로 정의한 것</li>\n<li>인스턴스(객체)<br>\n클래스에서 정의한 것을 토대로 실제 메모리상에 할당된 것을 의미하고, 실제 프로그램에서 사용할 데이터이다.</li>\n</ul>\n<hr class=\"sub\" />\n<h3 id=\"추상화\"><a href=\"#%EC%B6%94%EC%83%81%ED%99%94\" aria-label=\"추상화 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>추상화</h3>\n<p>불필요한 정보는 숨기고 중요한 정보만을 표현함으로써 <strong>공통적인 속성이나 기능을 묶어 이름을 붙이는 것</strong>이다.</p>\n<p>예를들어 인간, 사자, 토끼, 뱀이 있을 때 우리는 이것들을 각각의 객체라 하며 이 객체들을 하나로 묶으려 할 때, 인간 또는 동물이라는 어떤 추상적인 객체로 크게 정의한다고 하자. 이때 인간 또는 동물이라고 묶는 것을 추상화라고 한다.</p>\n<p>한마디로 클래스를 정의하는 것을 추상화라고 할 수 있다.</p>\n<hr class=\"sub\" />\n<h3 id=\"캡슐화\"><a href=\"#%EC%BA%A1%EC%8A%90%ED%99%94\" aria-label=\"캡슐화 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>캡슐화</h3>\n<p>프로그램 코드에서 변수와 함수를 재활용하기에는 분산되어 있기 때문에 재활용이 어려웠으나 캡슐화를 통해 관련된 기능과 특성을 한 곳에 모으고 분류하기 때문에 재활용이 원활해졌다.</p>\n<p><strong>객체 지향 프로그래밍에서 기능과 특성의 모음을 “클래스”라고하는 “캡슐”에 분류해서 넣는 것을 캡슐화라고 한다.</strong></p>\n<p>무작정 한 곳에 모으는 것이 아니라 관련된 기능과 특성을 한 곳에 모은다고 하였는데 이것을 은닉화라고도 한다.</p>\n<p>캡슐화에 성공하면 당연히 은닉화도 효력이 나타난다.</p>\n<hr class=\"sub\" />\n<h3 id=\"상속재사용\"><a href=\"#%EC%83%81%EC%86%8D%EC%9E%AC%EC%82%AC%EC%9A%A9\" aria-label=\"상속재사용 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>상속(재사용)</h3>\n<p>상위 개념의 특성과 기능을 하위 개념이 물려받아 사용할 수 있게 하고 기능의 일부분을 변경해야 할 경우 상속 받은 하위 개념에서 해당 기능만 다시 수정(정의)하여 사용할 수 있게 하는 것이다.</p>\n<hr class=\"sub\" />\n<h3 id=\"다형성\"><a href=\"#%EB%8B%A4%ED%98%95%EC%84%B1\" aria-label=\"다형성 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다형성</h3>\n<p>하나의 변수명, 함수명 등이 상황에 따라 다른 의미로 해석될수 있는 것이다.\n즉 <strong>오버라이딩(Overriding), 오버로딩(Overloading)이 가능하다는 것이다.</strong></p>\n<ul>\n<li>오버라이딩<br>\n상위 개념에서의 특성과 기능을 재정의 하는 것</li>\n<li>오버로딩<br>\n같은 이름의 함수를 여러개 정의하고, 매개변수의 타입과 개수를 다르게 해서 매개변수에 따라 구분하여 호출할 수 있게 하는 것</li>\n</ul>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<div class=\"reference-site\">\n<p>  <strong>Reference</strong><br></p>\n<p>  <a href=\"https://jeong-pro.tistory.com/95\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">정프로님의 블로그</a>,\n<a href=\"https://88240.tistory.com/228\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">shaking blog</a></p>\n</div>","fields":{"slug":"/posts/Etc/ObejctOrientedProgramming","tagSlugs":["/tag/object-oriented-programming/","/tag/oop/"]},"frontmatter":{"date":"2019-12-07","description":"객체 지향 프로그래밍에 대해서 알아보자","tags":["Object Oriented Programming","OOP"],"title":"객체 지향 프로그래밍(Object Oriented Programming)","socialImage":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/Etc/ObejctOrientedProgramming"}}}