{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/javascript/statement","webpackCompilationHash":"5a805ea4281871c3a5b6","result":{"data":{"markdownRemark":{"id":"5f21a6b1-15f4-57b0-810d-6f3b3b8c4e34","html":"<span class=\"notice\">\n  <em>TIL 내용이므로 잘못된 내용은 댓글 부탁드립니다</em>\n</span>\n<div id=\"toc\">\n<p><strong><img class=\"emoji-icon\" alt=\"emoji-link\" data-icon=\"emoji-link\" style=\"display: inline; margin: 0; margin-top: 1px; position: relative; top: 5px; width: 25px\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAQAAABKfvVzAAAABGdBTUEAAYagMeiWXwAAAAJiS0dEAP+Hj8y/AAAAB3RJTUUH4QsFFwYZepoZFwAAA21JREFUOMt1lFtsFHUUxr//zHYue213obFbamutloDaxSigISQYkFrjNSSI9EJ9IWqjkZhoUkVJGhdZO5pGm9IK4QHhQTRIFXwgxqSaWLykamAV02btZaft7navc9vZmb8PKFa6nofz9Ptycr5zIfif+BMcE23Q79SrkSK/uqYqrG0AAFIePw3ep+zXus0Ghrd1Msmfcn5oJ/YCYMvhI6D+uJQ84PCsvhwcZ5Xc2uSDmbqFse1qrJxgGLxflvL7hDn60uLBn04rn9hXrZbMFi0T/uaJlYIhiP64pHSJ00s9b34saietonbil8Y0adNr15+z8+yNOOeXJbVLiC319H++EV8DmEEb0jK3E7ep5+1px3L8AH5zed+2O2HGT23+jpJJ2gQAsJDPBVI8V3QRMP/i3VA8xsu5do1ccTDPpT478cyE5yQAIIjbA0ItDGNJw/UKR+D2/xgpdhB2Pto40xxU75ltYdaZhw7leDxJhnYb67TvlamKf5o+Cr9/VprdR1l7IbnbN2B9as1bGzP3a7Gqic3kq6eNPoFR+x79NnpNMASnPy7lOpUMZUjeGMwlErlL46JFHtIC8qj+eP490YfIlUG5dBYscBS8X5aULn460cs2CHXiRdekAxzNyuzDtH5BIK9UViISC9foxwGwryLjVvr1bnEm2zNyJtTs2Sr4GsYc+QJMq+Ixuja2Kci7I1fDbm0QAMDuRK7D6OXns89Lox3UlKu3iluE9bcWmpj4XfxeszJZcr9DDkMb/tsc0u7lzwrb1BePD2yCFxfJC631b7EtRWM6nRQCVXJ+or82UlTHr5vv0OuZptKc/EUbLgF4hA58+Vqsrt16AKEaQVAWe6eGsmZq2XAZw22LlsKo1/wdBSiNzh0sfOS1q4pEmh/e9R8cYEqLWOIDN928Cs8CAD7ABsb7lPm64LAik4ebjTM3LCdbqa4Oee4TmTvGbP0cNuBu5uc96Xd5H41MhH3qsRXLz263SvlAq/NeUt+YShDhluj+xBucl0b+CAfUkTLHRXYhyu7oXNPH1tAskyJeexVbUPp/P+LW3i97vAQcOMHduiO0Z03I6TFNOf7DhfMXVB0ENiyYMKBDhYYiTNiwCTg44YLI+5qrg540vawUTDAgoLBRQhE6VChQoMGEBZss+x0UAFnxR+iyDOAv/Ud+TW3GONMAAAAldEVYdGRhdGU6Y3JlYXRlADIwMTctMTEtMDVUMTg6NDk6NTArMDA6MDAUXGOwAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDE3LTExLTA1VDEzOjUzOjQ4KzAwOjAwqyFlXwAAAABJRU5ErkJggg==\" title=\"emoji-link\">  Table Of Contents</strong></p>\n<ul>\n<li><a href=\"#%ED%91%9C%ED%98%84%EC%8B%9Dexpression\">표현식(expression)</a></li>\n<li>\n<p><a href=\"#%EB%AC%B8statement\">문(statement)</a></p>\n<ul>\n<li><a href=\"#%ED%91%9C%ED%98%84%EC%8B%9D%EC%9D%B8-%EB%AC%B8%EA%B3%BC-%ED%91%9C%ED%98%84%EC%8B%9D%EC%9D%B4-%EC%95%84%EB%8B%8C-%EB%AC%B8\">표현식인 문과 표현식이 아닌 문</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<p><strong><img class=\"emoji-icon\" alt=\"emoji-scissors\" data-icon=\"emoji-scissors\" style=\"display: inline; margin: 0; margin-top: 1px; position: relative; top: 5px; width: 25px\" src=\"data:image/png;base64, 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\" title=\"emoji-scissors\"> 함축 설명</strong><br>\n<em>표현식(expression)의 역할은 값을 생성하는 것이다. 문(statement)의 역할은 표현식으로 생성한 값을 사용해 자바스크립트 엔진에게 명령을 내리는 것이다.</em></p>\n<h2 id=\"표현식expression\"><a href=\"#%ED%91%9C%ED%98%84%EC%8B%9Dexpression\" aria-label=\"표현식expression permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>표현식(expression)</h2>\n<p>표현식은 리터럴, 식별자(변수나 함수 등의 이름), 연산자, 함수 호출 등(이들을 <strong>토큰(Token)</strong>이라 한다)의 조합을 말한다.</p>\n<p>한마디로 <strong>하나의 값으로 평가될 수 있는 문</strong>이다.</p>\n<p>표현식은 리터럴 표현식, 식별자 표현식, 연산자 표현식, 함수/메소드 호출 표현식 등으로 나누어 볼 수 있지만 결국 평가되어 하나의 값을 만든다는 점에서 모두 동일하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 리터럴 표현식</span>\n<span class=\"token number\">10</span>\n<span class=\"token string\">'Hello'</span>\n\n<span class=\"token comment\">// 식별자 표현식(선언이 이미 존재한다고 가정)</span>\nsum\nperson<span class=\"token punctuation\">.</span>name\narr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\">// 연산자 표현식</span>\n<span class=\"token number\">10</span> <span class=\"token operator\">+</span> <span class=\"token number\">20</span>\nsum <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\nsum <span class=\"token operator\">!==</span> <span class=\"token number\">10</span>\n\n<span class=\"token comment\">// 함수/메소드 호출 표현식(선언이 이미 존재한다고 가정)</span>\n<span class=\"token function\">square</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nperson<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>표현식은 자바스크립트엔진에 의해 평가되어 결국 하나의 값이 되므로 표현식이 되어 생성된 값은 동등한 관계, 동치(Equivalent)다.<br>\n표현식은 값처럼 사용할 수 있다. 이것은 <strong>문법적으로 값이 위치할 수 있는 자리에는 표현식도 위치할 수 있다</strong>라는 것을 의미한다.</p>\n<p><em>예시를 보면</em></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token number\">10</span> <span class=\"token operator\">+</span> x<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 40</span></code></pre></div>\n<p>산술연산자(+)는 좌항과 우항에는 숫자 값이 위치해야한다. 하지만 <strong>숫자 값으로 평가될 수 있는 표현식</strong>이라면 숫자 값 대신 사용할 수 있다.\n위에 x는 10이라는 값을 가진 식별자 표현식이다. 즉, x는 할당되어 있는 숫자값 10으로 평가된다. 따라서 <em>값이 위치할 곳에 값으로 평가될 수 있는 표현식이 올 수 있다는 점을 알 수 있다.</em></p>\n<h2 id=\"문statement\"><a href=\"#%EB%AC%B8statement\" aria-label=\"문statement permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문(statement)</h2>\n<p><strong>하나 이상의 표현식과 키워드(var, let, const, for, if, function 등)의 조합으로 구성된 자바스크립트 엔진에게 내리는 명령이다</strong></p>\n<p>문은 선언문, 표현식 문(할당문), 조건문, 반복문 등으로 구분할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 변수 선언문</span>\n<span class=\"token keyword\">var</span> foo<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 표현식 문(할당문)</span>\nx <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 함수 선언문</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 조건문</span>\n<span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 반복문</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>문은 구성되며 세미콜론(;)으로 끝나야 한다.<br>\n<strong><em>단 코드 블록{…}뒤에는 세미콜론을 붙이지 않는다.</em></strong> 객체리터럴의 {…} 뒤에는 세미콜론(;)을 붙여야된다. 이는 표현식이기 때문이다. 이 차이점은 <a href=\"/posts/javascript/Object\">객체</a>에서 자세히 알아보자.</p>\n<blockquote>\n<p><strong>세미콜론 자동 삽입 기능(ASI, automatic semicolon insertion)</strong><br>\n문의 끝에 붙이는 세미콜론은 옵션이다. 따라서 세미콜론은 생략 가능하다. 자바스크립트 엔진에는 소스 코드를 해석할 때, 문의 끝이라고 예측되는 지점에 세미콜론을 자동으로 붙여주는 세미콜론 자동 삽입 기능(ASI, automatic semicolon insertion)이 있기 때문이다. 하지만 세미콜론 자동 삽입 기능의 예측과 개발자의 예측과 다른 경우가 간혹 있다. 그래서 가급적 세미콜론을 써주는 것을 TC39(ECMAScript 기술 위원회)에서도 권장한다.</p>\n</blockquote>\n<br>\n<h3 id=\"표현식인-문과-표현식이-아닌-문\"><a href=\"#%ED%91%9C%ED%98%84%EC%8B%9D%EC%9D%B8-%EB%AC%B8%EA%B3%BC-%ED%91%9C%ED%98%84%EC%8B%9D%EC%9D%B4-%EC%95%84%EB%8B%8C-%EB%AC%B8\" aria-label=\"표현식인 문과 표현식이 아닌 문 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>표현식인 문과 표현식이 아닌 문</h3>\n<p>문에는 표현식인 문과 표현식이 아닌 문이 있다.</p>\n<ul>\n<li>표현식인 문: 값으로 평가될 수 있는 문이다.</li>\n<li>표현식이 아닌 문: 값으로 평가될 수 없는 문이다.</li>\n</ul>\n<p><em>예시를 보면</em></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 변수 선언문은 표현식이 아닌 문이다. 한마디로 하나의 값으로 평가될 수 없다.</span>\n<span class=\"token keyword\">var</span> x<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 할당문은 그 자체가 표현식이지만 완전한 문이기도 하다.</span>\n<span class=\"token comment\">// 즉, 할당문은 표현식인 문이다.</span>\nx <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이를 구별하기 위한 가장 간단한 방법은 직접 변수에 할당해 보는 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 표현식이 아닌 문은 값처럼 사용할 수 없다.</span>\n<span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token keyword\">var</span> a<span class=\"token punctuation\">;</span> <span class=\"token comment\">// SyntaxError: Unexpected token var</span></code></pre></div>\n<p>위 예제의 x = 100 은 그 자체가 표현식이다. 할당문은 표현식이기 때문에 값처럼 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 표현식인 문은 값처럼 사용할 수 있다.</span>\n<span class=\"token keyword\">var</span> foo <span class=\"token operator\">=</span> x <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 100</span></code></pre></div>\n<br>\n<br>\n<br>\n<br>","fields":{"slug":"/posts/javascript/statement","tagSlugs":["/tag/expression/","/tag/statement/"]},"frontmatter":{"date":"2019-10-13","description":"표현식과 문에 대해서 알아보자","tags":["expression","statement"],"title":"표현식과 문","socialImage":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/javascript/statement"}}}