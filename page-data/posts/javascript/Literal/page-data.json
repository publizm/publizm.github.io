{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/javascript/Literal","webpackCompilationHash":"008d326b7ac6daafce2b","result":{"data":{"markdownRemark":{"id":"ee3bc5b9-4501-548f-8a8f-3a8a907d0364","html":"<span class=\"notice\">\n  <em>TIL 내용이므로 잘못된 내용은 댓글 부탁드립니다</em>\n</span>\n<div id=\"toc\">\n<p><strong><img class=\"emoji-icon\" alt=\"emoji-link\" data-icon=\"emoji-link\" style=\"display: inline; margin: 0; margin-top: 1px; position: relative; top: 5px; width: 25px\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAQAAABKfvVzAAAABGdBTUEAAYagMeiWXwAAAAJiS0dEAP+Hj8y/AAAAB3RJTUUH4QsFFwYZepoZFwAAA21JREFUOMt1lFtsFHUUxr//zHYue213obFbamutloDaxSigISQYkFrjNSSI9EJ9IWqjkZhoUkVJGhdZO5pGm9IK4QHhQTRIFXwgxqSaWLykamAV02btZaft7navc9vZmb8PKFa6nofz9Ptycr5zIfif+BMcE23Q79SrkSK/uqYqrG0AAFIePw3ep+zXus0Ghrd1Msmfcn5oJ/YCYMvhI6D+uJQ84PCsvhwcZ5Xc2uSDmbqFse1qrJxgGLxflvL7hDn60uLBn04rn9hXrZbMFi0T/uaJlYIhiP64pHSJ00s9b34saietonbil8Y0adNr15+z8+yNOOeXJbVLiC319H++EV8DmEEb0jK3E7ep5+1px3L8AH5zed+2O2HGT23+jpJJ2gQAsJDPBVI8V3QRMP/i3VA8xsu5do1ccTDPpT478cyE5yQAIIjbA0ItDGNJw/UKR+D2/xgpdhB2Pto40xxU75ltYdaZhw7leDxJhnYb67TvlamKf5o+Cr9/VprdR1l7IbnbN2B9as1bGzP3a7Gqic3kq6eNPoFR+x79NnpNMASnPy7lOpUMZUjeGMwlErlL46JFHtIC8qj+eP490YfIlUG5dBYscBS8X5aULn460cs2CHXiRdekAxzNyuzDtH5BIK9UViISC9foxwGwryLjVvr1bnEm2zNyJtTs2Sr4GsYc+QJMq+Ixuja2Kci7I1fDbm0QAMDuRK7D6OXns89Lox3UlKu3iluE9bcWmpj4XfxeszJZcr9DDkMb/tsc0u7lzwrb1BePD2yCFxfJC631b7EtRWM6nRQCVXJ+or82UlTHr5vv0OuZptKc/EUbLgF4hA58+Vqsrt16AKEaQVAWe6eGsmZq2XAZw22LlsKo1/wdBSiNzh0sfOS1q4pEmh/e9R8cYEqLWOIDN928Cs8CAD7ABsb7lPm64LAik4ebjTM3LCdbqa4Oee4TmTvGbP0cNuBu5uc96Xd5H41MhH3qsRXLz263SvlAq/NeUt+YShDhluj+xBucl0b+CAfUkTLHRXYhyu7oXNPH1tAskyJeexVbUPp/P+LW3i97vAQcOMHduiO0Z03I6TFNOf7DhfMXVB0ENiyYMKBDhYYiTNiwCTg44YLI+5qrg540vawUTDAgoLBRQhE6VChQoMGEBZss+x0UAFnxR+iyDOAv/Ud+TW3GONMAAAAldEVYdGRhdGU6Y3JlYXRlADIwMTctMTEtMDVUMTg6NDk6NTArMDA6MDAUXGOwAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDE3LTExLTA1VDEzOjUzOjQ4KzAwOjAwqyFlXwAAAABJRU5ErkJggg==\" title=\"emoji-link\">  Table Of Contents</strong></p>\n<ul>\n<li>\n<p><a href=\"#%EB%A6%AC%ED%84%B0%EB%9F%B4literal%EC%9D%B4%EB%9E%80\">리터럴(Literal)이란?</a></p>\n<ul>\n<li><a href=\"#%EA%B0%92%EA%B3%BC-%EB%A6%AC%ED%84%B0%EB%9F%B4\">값과 리터럴</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%A6%AC%ED%84%B0%EB%9F%B4-%ED%91%9C%EA%B8%B0%EB%B2%95literal-notation%EC%9D%B4%EB%9E%80\">리터럴 표기법(Literal notation)이란?</a></p>\n<ul>\n<li><a href=\"#%EB%A6%AC%ED%84%B0%EB%9F%B4-%ED%91%9C%EA%B8%B0%EB%B2%95%EC%9D%98-%EC%82%AC%EC%9A%A9\">리터럴 표기법의 사용</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<h2 id=\"리터럴literal이란\"><a href=\"#%EB%A6%AC%ED%84%B0%EB%9F%B4literal%EC%9D%B4%EB%9E%80\" aria-label=\"리터럴literal이란 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리터럴(Literal)이란?</h2>\n<p>리터럴은 <b>리터럴 표기법(Literal notation)으로 생성한 소스 코드 안에서 직접 만들어 낸 고정된 값 그 자체를 말한다.</b></p>\n<h3 id=\"값과-리터럴\"><a href=\"#%EA%B0%92%EA%B3%BC-%EB%A6%AC%ED%84%B0%EB%9F%B4\" aria-label=\"값과 리터럴 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>값과 리터럴</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> score <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>리터럴(100)은 값이라고 했다. 그러므로 리터럴(100)은 변수 score에 할당할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> score <span class=\"token operator\">=</span> <span class=\"token number\">50</span> <span class=\"token operator\">+</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>두개의 리터럴 50을 + 연산자를 사용하여 합산하고 있다. 이 식은 새로운 값 100을 생성한다. 값을 생성하는 문을 표현식이라 하는데, 이처럼 리터럴은 그 자체로 표현식이며 표현식의 일부로서 다른 값을 생성하는데 사용되기도 한다.</p>\n<h2 id=\"리터럴-표기법literal-notation이란\"><a href=\"#%EB%A6%AC%ED%84%B0%EB%9F%B4-%ED%91%9C%EA%B8%B0%EB%B2%95literal-notation%EC%9D%B4%EB%9E%80\" aria-label=\"리터럴 표기법literal notation이란 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리터럴 표기법(Literal notation)이란?</h2>\n<p><b>자바스크립트 엔진에 사람이 이해할 수 있는 표기법으로 값의 생성을 명령 하는 것이다.</b></p>\n<p>리터럴 표기법은 자바스크립트 엔진과 개발자 간의 약속으로 이해하면 편하다. 리터럴 표기법으로 기술한 리터럴은 자바스크립트엔진에 의해 해석되어 값으로 평가된다. 다시 말해, <em>자바스크립트 엔진은 리터럴 표기법으로 작성된 코드(리터럴)를 만나면, 코드가 실행되는 시점인 런타임(run time)에 리터럴을 해석하고 리터럴에 상응하는 값을 생성한다.</em><br>\n따라서 <strong>리터럴은 결국 값이 되므로 리터럴을 값 자체라고 표현할 수 있다</strong></p>\n<br>\n<h3 id=\"리터럴-표기법의-사용\"><a href=\"#%EB%A6%AC%ED%84%B0%EB%9F%B4-%ED%91%9C%EA%B8%B0%EB%B2%95%EC%9D%98-%EC%82%AC%EC%9A%A9\" aria-label=\"리터럴 표기법의 사용 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리터럴 표기법의 사용</h3>\n<p>리터럴 표기법을 사용하면 자바스크립트에서 사용할 수 있는 다양한 타입의 값(숫자, 문자열, 불리언, undefined, null, 객체, 배열, 함수, 정규표현식 등)을 생성할 수 있다.</p>\n<p><em>아래의 예시로 확인해보자</em></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 정수 리터럴</span>\n<span class=\"token number\">100</span>\n<span class=\"token comment\">// 부동 소숫점 리터럴</span>\n<span class=\"token number\">10.5</span>\n<span class=\"token comment\">// 2진수 리터럴(0b로 시작)</span>\n<span class=\"token number\">0b01000001</span>\n<span class=\"token comment\">// 8진수 리터럴(ES6에서 도입. 0o로 시작)</span>\n<span class=\"token number\">0o101</span>\n<span class=\"token comment\">// 16진수 리터럴(ES6에서 도입. 0x로 시작)</span>\n<span class=\"token number\">0x41</span>\n\n<span class=\"token comment\">// 문자열 리터럴</span>\n<span class=\"token string\">'Hello'</span>\n<span class=\"token string\">\"World\"</span>\n\n<span class=\"token comment\">// 불리언 리터럴</span>\n<span class=\"token boolean\">true</span>\n<span class=\"token boolean\">false</span>\n\n<span class=\"token comment\">// null 리터럴</span>\n<span class=\"token keyword\">null</span>\n\n<span class=\"token comment\">// undefined 리터럴</span>\n<span class=\"token keyword\">undefined</span>\n\n<span class=\"token comment\">// 객체 리터럴</span>\n<span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'Lee'</span><span class=\"token punctuation\">,</span> address<span class=\"token punctuation\">:</span> <span class=\"token string\">'Seoul'</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 배열 리터럴</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\">// 함수 리터럴</span>\n<span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 정규표현식 리터럴</span>\n<span class=\"token operator\">/</span><span class=\"token punctuation\">[</span><span class=\"token constant\">A</span><span class=\"token operator\">-</span><span class=\"token constant\">Z</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token operator\">/</span>g</code></pre></div>\n<p>다른 예시로</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 정수 리터럴</span>\n<span class=\"token number\">65</span>\n<span class=\"token comment\">// 2진수 리터럴</span>\n<span class=\"token number\">0b01000001</span>\n<span class=\"token comment\">// 8진수 리터럴</span>\n<span class=\"token number\">0o101</span>\n<span class=\"token comment\">// 16진수 리터럴</span>\n<span class=\"token number\">0x41</span>\n\n<span class=\"token comment\">// 표기법만 다를 뿐 같은 값이다.</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">0b01000001</span> <span class=\"token operator\">===</span> <span class=\"token number\">65</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">0b01000001</span> <span class=\"token operator\">===</span> <span class=\"token number\">0o101</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">0b01000001</span> <span class=\"token operator\">===</span> <span class=\"token number\">0x41</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// true</span></code></pre></div>\n<p>위 예시의 리터럴들은 표기법만 다를 뿐 모두 동일한 값(65)를 생성한다. 즉, 2진수, 8진수, 10진수, 16진수 등은 모두 사람을 위한 표기법일 뿐 컴퓨터는 모두 2진수로 처리한다는 것이다.</p>\n<br>\n<br>\n<br>\n<br>","fields":{"slug":"/posts/javascript/Literal","tagSlugs":["/tag/literal/","/tag/literal-notation/"]},"frontmatter":{"date":"2019-10-13","description":"리터럴과 리터럴표기법에 대해서 알아보자","tags":["Literal","Literal notation"],"title":"Literal","socialImage":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/javascript/Literal"}}}