{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/algorithm/algorithm03","webpackCompilationHash":"c090229e832431e5e415","result":{"data":{"markdownRemark":{"id":"37b76110-1987-501a-8931-2ac5e60f0777","html":"<span class=\"notice\">\n  <em>좀 더 좋은 방법이 있다면 댓글로 공유 부탁드립니다.</em>\n</span>\n<h2 id=\"문자열-다루기\"><a href=\"#%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%8B%A4%EB%A3%A8%EA%B8%B0\" aria-label=\"문자열 다루기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문자열 다루기</h2>\n<p>s의 길이가 4 ~ 6이고, 숫자로만 구성되어 있는지 확인하는 alphaString46 함수를 완성하라.<br>\n예를 들어 s가 ‘a234’이면 false를 리턴하고 ‘1234’라면 true를 리턴한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">alphaString46</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">s</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ① 부분 실패</span>\n  <span class=\"token comment\">// if (s &amp;&amp; !spaceCheck.test(s)) {</span>\n  <span class=\"token comment\">//   let num = +s;</span>\n\n  <span class=\"token comment\">//   if (s.length >= 4 &amp;&amp; s.length &lt;= 6) {</span>\n  <span class=\"token comment\">//     num ? console.log(true) : console.log(false);</span>\n  <span class=\"token comment\">//   } else {</span>\n  <span class=\"token comment\">//     console.log(false);</span>\n  <span class=\"token comment\">//   }</span>\n  <span class=\"token comment\">// } else {</span>\n  <span class=\"token comment\">//   console.log(false);</span>\n  <span class=\"token comment\">// }</span>\n\n  <span class=\"token comment\">// ② 부분 실패</span>\n  <span class=\"token comment\">// if (s &amp;&amp; !spaceCheck.test(s)) {</span>\n  <span class=\"token comment\">//   if (s.length >= 4 &amp;&amp; s.length &lt;= 6) {</span>\n  <span class=\"token comment\">//     !isNaN(s) ? console.log(true) : console.log(false);</span>\n  <span class=\"token comment\">//   } else {</span>\n  <span class=\"token comment\">//     console.log(false);</span>\n  <span class=\"token comment\">//   }</span>\n  <span class=\"token comment\">// } else {</span>\n  <span class=\"token comment\">//   console.log(false);</span>\n  <span class=\"token comment\">// }</span>\n\n  <span class=\"token comment\">// ③ 부분 실패</span>\n  <span class=\"token comment\">// const spaceCheck = /[\\s]+/;</span>\n  <span class=\"token comment\">// if (!s || spaceCheck.test(s)) return console.log(false);</span>\n\n  <span class=\"token comment\">// if (s.length >= 4 &amp;&amp; s.length &lt;= 6) {</span>\n  <span class=\"token comment\">//   !isNaN(s) ? console.log(true) : console.log(false);</span>\n  <span class=\"token comment\">// } else {</span>\n  <span class=\"token comment\">//   console.log(false);</span>\n  <span class=\"token comment\">// }</span>\n\n  <span class=\"token comment\">// ④ 부분 실패</span>\n  <span class=\"token comment\">// if (!s || s.includes(' ')) return console.log(false);</span>\n\n  <span class=\"token comment\">// if (s.length >= 4 &amp;&amp; s.length &lt;= 6) {</span>\n  <span class=\"token comment\">//   !isNaN(s) ? console.log(true) : console.log(false);</span>\n  <span class=\"token comment\">// } else {</span>\n  <span class=\"token comment\">//   console.log(false);</span>\n  <span class=\"token comment\">// }</span>\n\n  <span class=\"token comment\">// ⑤</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">4</span> <span class=\"token operator\">||</span> s<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> s<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">charCodeAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token number\">48</span> <span class=\"token operator\">&amp;&amp;</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">charCodeAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">57</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">alphaString46</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1234'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token function\">alphaString46</span><span class=\"token punctuation\">(</span><span class=\"token string\">'9014'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token function\">alphaString46</span><span class=\"token punctuation\">(</span><span class=\"token string\">'723'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// false</span>\n<span class=\"token function\">alphaString46</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a234'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span></code></pre></div>\n<br>\n<br>\n<br>\n<br>\n<br>","fields":{"slug":"/posts/algorithm/algorithm03","tagSlugs":["/tag/algorithm/"]},"frontmatter":{"date":"2019-10-31","description":"알고리즘 연습하기","tags":["algorithm"],"title":"문자열 다루기","socialImage":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/algorithm/algorithm03"}}}