{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/algorithm/programmers19","webpackCompilationHash":"59e1f99ee569c82a5ab8","result":{"data":{"markdownRemark":{"id":"76217b29-654f-59a9-bdbb-1c79a5c8972a","html":"<span class=\"notice\">\n  <em>좀 더 좋은 방법이 있다면 댓글로 공유 부탁드립니다.</em>\n</span>\n<h2 id=\"최대공약수와-최소공배수\"><a href=\"#%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98%EC%99%80-%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98\" aria-label=\"최대공약수와 최소공배수 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>최대공약수와 최소공배수</h2>\n<p>두 수를 입력받아 두 수의 최대공약수와 최소공배수를 반환하는 함수, solution을 완성해 보세요.<br>\n배열의 맨 앞에 최대공약수, 그다음 최소공배수를 넣어 반환하면 됩니다.<br>\n예를 들어 두 수 3, 12의 최대공약수는 3, 최소공배수는 12이므로 solution(3, 12)는 [3, 12]를 반환해야 합니다.</p>\n<br>\n<h3 id=\"제한사항\"><a href=\"#%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD\" aria-label=\"제한사항 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제한사항</h3>\n<ul>\n<li>두 수는 1이상 1000000이하의 자연수입니다.</li>\n</ul>\n<hr class=\"sub\" />\n<h3 id=\"입출력-예\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"입출력 예 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예</h3>\n<article class=\"board-tbl\">\n<table>\n<thead>\n<tr>\n<th>n</th>\n<th>m</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>3</td>\n<td>12</td>\n<td>[3, 12]</td>\n</tr>\n<tr>\n<td>2</td>\n<td>5</td>\n<td>[1, 10]</td>\n</tr>\n</tbody>\n</table>\n</article>\n<hr class=\"sub\" />\n<h3 id=\"풀이\"><a href=\"#%ED%92%80%EC%9D%B4\" aria-label=\"풀이 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n<span class=\"token punctuation\">,</span> m</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> gcd <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> lcm <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">%</span> i <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>m <span class=\"token operator\">%</span> i <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      gcd <span class=\"token operator\">=</span> i\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  lcm <span class=\"token operator\">=</span> n <span class=\"token operator\">*</span> m <span class=\"token operator\">/</span> gcd<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>gcd<span class=\"token punctuation\">,</span> lcm<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>처음 어떤식으로 접근해야 되는지 어려웠다. 공식을 찾아보았더니 아래와 같은 공식이 있었다.</p>\n<br>\n<p><strong>최대 공약수(GCD)를 구하는 알고리즘</strong></p>\n<p>유클리드(Euclidean) 공식 이용</p>\n<ul>\n<li>큰 수 A를 작은 수 B로 나누어 떨어지면, A와 B의 최대공약수는 B</li>\n<li>A를 B로 나누었을 때 나머지가 R이면, A와 B의 최대공약수는 R과 B의 최대공약수와 같다.</li>\n</ul>\n<p>알고리즘 순서</p>\n<ol>\n<li>두 수 A, B 중 큰 수, 작은 수를 판별<br></li>\n<li>큰 수를 작은 수로 나누어 나머지를 구한다.<br>\n2-1. 만약 나머지가 0일 경우, 작은 수가 최대공약수\n2-2. 나머지가 0이 아니면 나머지를 가지고 2 ~ 2-1 반복</li>\n</ol>\n<br>\n<br>\n<p><strong>최소 공배수(LCM)를 구하는 알고리즘</strong></p>\n<p>최소공배수(LCM)은 A X B / 최대공약수(GCD)이므로 위의 최대공약수 알고리즘으로 최대공약수를 구한 후 A x B / GCD를 하면 됬다.</p>\n<p>내가 풀이한 최대 공약수를 구하는 알고리즘은 유클리드 공식을 이용하여 작업하였는데\n별도로 if문으로 나머지가 떨어지는지 확인하지 않고, 큰 수와 작은 수만 판별하여 For문으로 1부터 시작해서 작은 수까지 반복하며, 큰 수와 작은 수 둘다 나누어 떨어지는 값을 구해 최대공약수로 만들어서 작업했다.</p>\n<br>\n<br>\n<br>\n<br>\n<br>","fields":{"slug":"/posts/algorithm/programmers19","tagSlugs":["/tag/algorithm/"]},"frontmatter":{"date":"2019-12-17","description":"알고리즘 연습하기","tags":["algorithm"],"title":"최대공약수와 최소공배수(프로그래머스)","socialImage":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/algorithm/programmers19"}}}